{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/operations.service.ts","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/error-message.directive.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","OperationsService","localStorageProperty","JSON","parse","localStorage","getItem","setItem","removeItem","exception","taskIndex","tasksList","getListOfTasks","splice","stringify","taskTitle","taskContent","description","push","providedIn","ListComponent","service","taskList","trigger","isErrorMessage","isLocalStorage","checkLocalStorage","isTasksAvailable","addListener","removeAllListeners","elementId","displayState","document","getElementById","style","display","elementIndex","deleteSingleTask","emit","getTaskCurrentValues","editFormElementTitle","editFormElementDescription","editFormElementId","changeElementView","form","invalid","value","id","newTitle","newDescription","changeTaskValue","console","log","taskDescription","createNewTask","reset","changeTask","routes","AppRoutingModule","forRoot","exports","ErrorMessageDirective","el","nativeElement","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'to-do-list';\n}\n","<app-list></app-list>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OperationsService } from './services/operations.service';\nimport { ErrorMessageDirective } from './error-message.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    ErrorMessageDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    OperationsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { singleTask } from '../single-task-model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class OperationsService {\n  localStorageProperty: string = 'taskList';\n  constructor() { }\n\n  private getListOfTasks(): singleTask[] {\n    return JSON.parse(localStorage.getItem(this.localStorageProperty));\n  }\n\n  checkLocalStorage(): boolean {\n    try {\n      localStorage.setItem('testProp', 'testValue');\n      localStorage.removeItem('testProp');\n      return true;\n    } catch (exception) {\n      return false;\n    }\n  }\n\n  deleteSingleTask(taskIndex: number): void {\n    let tasksList = this.getListOfTasks();\n\n    tasksList.splice(taskIndex, 1);\n    localStorage.setItem(this.localStorageProperty, JSON.stringify(tasksList));\n  }\n\n  getTaskCurrentValues(taskIndex: number): singleTask {\n    let tasksList = this.getListOfTasks();\n\n    return tasksList[taskIndex];\n  }\n\n  changeTaskValue(taskIndex: number, taskTitle: string, taskContent: string): void {\n    let tasksList = this.getListOfTasks();\n    \n    tasksList[taskIndex] = { title: taskTitle, description: taskContent };\n    localStorage.setItem(this.localStorageProperty, JSON.stringify(tasksList));\n  }\n\n  createNewTask(taskTitle: string, taskContent: string): void {\n    let tasksList = this.getListOfTasks();\n\n    tasksList.push({ title: taskTitle, description: taskContent });\n    localStorage.setItem(this.localStorageProperty, JSON.stringify(tasksList));\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport * as EventEmitter from 'events';\nimport { OperationsService } from '../services/operations.service';\nimport { singleTask } from '../single-task-model';\n\nconst enum elementsId {\n  editForm = 'editForm',\n  createForm = 'createForm',\n  errorMessage = 'error-msg'\n}\n\nconst enum localStorageProperties {\n  taskList = 'taskList'\n}\n\nconst enum Events {\n  reload = 'reload'\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\n\nexport class ListComponent implements OnInit, OnDestroy {\n  taskList: singleTask[] = [];\n  isLocalStorage: Boolean;\n  trigger: EventEmitter = new EventEmitter();\n\n  editFormElementTitle: string;\n  editFormElementDescription: string;\n  editFormElementId: number;\n\n  isErrorMessage: boolean = true;\n\n  constructor(private service: OperationsService) { }\n\n  ngOnInit(): void {\n    this.isErrorMessage = false;\n    this.isLocalStorage = this.service.checkLocalStorage();\n\n    if (this.isLocalStorage) {\n      let isTasksAvailable = !!localStorage.getItem(localStorageProperties.taskList);\n\n      if (isTasksAvailable) {\n        this.taskList = JSON.parse(localStorage.getItem(localStorageProperties.taskList));\n      } else {\n        localStorage.setItem(localStorageProperties.taskList, JSON.stringify([]));\n      }\n\n      this.trigger.addListener(Events.reload, () => this.taskList = JSON.parse(localStorage.getItem(localStorageProperties.taskList)));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.trigger.removeAllListeners;\n  }\n\n  private changeElementView(elementId: string, displayState: string): void {\n    document.getElementById(elementId).style.display = displayState;\n  }\n\n  deleteTask(elementIndex: number): void {\n    this.service.deleteSingleTask(elementIndex);\n    this.trigger.emit(Events.reload);\n  }\n\n  editTask(elementIndex: number): void {\n    let { title, description } = this.service.getTaskCurrentValues(elementIndex);\n\n    this.editFormElementTitle = title;\n    this.editFormElementDescription = description;\n    this.editFormElementId = elementIndex;\n\n    this.changeElementView(elementsId.editForm, 'block');\n    this.changeElementView(elementsId.createForm, 'none');\n  }\n\n  changeTask(form: HTMLFormElement): void {\n    if (form.invalid) {\n      this.changeElementView(elementsId.errorMessage, 'block');\n      return;\n    }\n\n    let { id, newTitle, newDescription } = form.value;\n\n    this.service.changeTaskValue(id, newTitle, newDescription);\n    this.trigger.emit(Events.reload);\n\n    this.changeElementView(elementsId.editForm, 'none');\n    this.changeElementView(elementsId.createForm, 'block');\n    this.changeElementView(elementsId.errorMessage, 'none');\n  }\n\n  createNewTask(form: HTMLFormElement): void {\n    if (form.invalid) {\n      console.log(form);\n      this.changeElementView(elementsId.errorMessage, 'block');\n      return;\n    }\n\n    let { taskTitle, taskDescription } = form.value;\n\n    this.service.createNewTask(taskTitle, taskDescription);\n    this.changeElementView(elementsId.errorMessage, 'none');\n\n    this.trigger.emit(Events.reload);\n\n    form.reset();\n  }\n}\n","<div class=\"list-holder\">\n    <div class=\"list\">\n        <h1>To Do List</h1>\n\n        <form id=\"createForm\" #createForm=\"ngForm\" (ngSubmit)=\"createNewTask(createForm.form)\">\n            <fieldset>\n                <legend>Create Task</legend>\n                <input ngModel required minlength=\"3\" type=\"text\" name=\"taskTitle\" placeholder=\"Task Title\">\n                <textarea ngModel required minlength=\"3\" name=\"taskDescription\" placeholder=\"Task description\" cols=\"30\"\n                    rows=\"10\"></textarea>\n                <button type=\"submit\">Create</button>\n            </fieldset>\n        </form>\n\n        <form id=\"editForm\" class=\"hidden\" #editForm=\"ngForm\" (ngSubmit)=\"changeTask(editForm.form)\">\n            <fieldset>\n                <legend>Edit Task</legend>\n                <input [(ngModel)]=\"editFormElementTitle\" required minlength=\"3\" type=\"text\" name=\"newTitle\">\n                <textarea [(ngModel)]=\"editFormElementDescription\" required minlength=\"3\" name=\"newDescription\"\n                    cols=\"30\" rows=\"10\"></textarea>\n                <input [(ngModel)]=\"editFormElementId\" type=\"text\" class=\"hidden\" name=\"id\">\n                <button type=\"submit\">Change Task</button>\n            </fieldset>\n        </form>\n\n        <div class=\"error-msg\" id=\"error-msg\" hidden>The task must be at least 3 characters long</div>\n\n        <div class=\"task-holder\">\n            <div *ngFor=\"let task of taskList, let i = index\">\n                <div class=\"task-content\">\n                    <h2>{{task.title}}</h2>\n                    <p>{{task.description}}</p>\n                </div>\n                <div class=\"btn-holder\">\n                    <button (click)=\"deleteTask(i)\">Delete</button>\n                    <button (click)=\"editTask(i, editForm)\">Edit</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appErrorMessage]'\n})\nexport class ErrorMessageDirective implements OnInit {\n  \n  constructor(private el: ElementRef<HTMLDivElement>) { }\n  @Input('isErrorMessage') isErrorMessage: string;\n  \n  ngOnInit(): void {\n    this.el.nativeElement.style.display = 'block';\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}